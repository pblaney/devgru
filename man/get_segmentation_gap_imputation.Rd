% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swissArmyKnife.R
\name{get_segmentation_gap_imputation}
\alias{get_segmentation_gap_imputation}
\title{Generate gap imputed segmentation from CBS output}
\usage{
get_segmentation_gap_imputation(
  path_to_dryclean_segmentation,
  threshold_for_imputation = -4.95,
  path_to_structural_variants = NULL,
  cpus = 1,
  make_diagnostic_plots = FALSE,
  path_to_diagnostic_plots_dir = NULL,
  exp_colnames = c("ID", "chrom", "loc.start", "loc.end", "num.mark", "seg.mean"),
  verbose = T
)
}
\arguments{
\item{path_to_dryclean_segmentation}{Path to dryclean CBS segmentation}

\item{threshold_for_imputation}{Threshold for determining gaps for imputation, default: -4.95}

\item{path_to_structural_variants}{Path to structural variants called for sample, optional}

\item{cpus}{Number of CPUs to use for parallel execution, default: 1}

\item{make_diagnostic_plots}{Generate diagnostic plots for each imputed gap, default: FALSE}

\item{path_to_diagnostic_plots_dir}{Path to directory to place diagnostic plot PNGs}

\item{exp_colnames}{Expected column names for segmentation input data.table}

\item{verbose}{Output CLI during workflow, default: TRUE}
}
\value{
GenomicRanges object with gap imputed segmentation
}
\description{
Given CBS segmentation with small, zero signal gaps, run neighbrohood-based partition
regression gap imputation in a parallel manner to produce a gap imputed segmentation file
that is provides cleaner foreground signal in JaBbA and GISTIC.
}
\examples{
# Execute the full workflow
# full_imp_test <- get_segmentation_gap_imputation(
# path_to_dryclean_segmentation = "sample.dryclean.fragcounter.cbs.seg",
# threshold_for_imputation = -4.95,
# path_to_structural_variants = "sample.hq.union.consensus.somatic.sv.bedpe",
# cpus = 2,
# make_diagnostic_plots = T,
# path_to_diagnostic_plots_dir = "impute_qc_plots/")

}
\keyword{workflow}
