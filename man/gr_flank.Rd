% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swissArmyKnife.R
\name{gr_flank}
\alias{gr_flank}
\title{Precise addition of flanking to GRanges with boundary-aware options}
\usage{
gr_flank(
  input_gr,
  start_flank = NULL,
  end_flank = NULL,
  start_flank_boundary = NULL,
  end_flank_boundary = NULL
)
}
\arguments{
\item{input_gr}{GRanges object to add flanks to}

\item{start_flank}{Amount of flank (in bp) to be added to the start of the ranges, default:NULL}

\item{end_flank}{Amount of flank (in bp) to be added to the end of the ranges, default:NULL}

\item{start_flank_boundary}{The genomic coordinate the start of the flanked GRanges should
to not exceed, default: NULL}

\item{end_flank_boundary}{The genomic coordinate the end of the flanked GRanges should
to not exceed, default: NULL}
}
\description{
Precise addition of flanks to the start and/or end of a GRanges object with the option
of setting a boundary for the flanks, helpful to account for boundaries like chromosome arms.

Note, the boundaries are compared directly to the new flanked start/end and do not currently
take the chromosome into account automatically. Thus, this function is best applied in on
per chromosome basis.

If the flank exceeds the boundary, the new flanked start/end will set at the boundary.
}
\examples{
# Not a DT
dt_sanitycheck(query_dt = kras_dnase_demo_gr_hg38)
# Just a DT
dt_sanitycheck(query_dt = braf_dnase_demo_dt_hg38)
# DT with correct columns
dt_sanitycheck(query_dt = braf_dnase_demo_dt_hg38, expected_cols = c("seqnames","start","end","strand","signalValue","pValue"))
# DT with less columns than expected
dt_sanitycheck(query_dt = braf_dnase_demo_dt_hg38[,-3], expected_cols = c("seqnames","start","end","strand","signalValue","pValue"))

}
