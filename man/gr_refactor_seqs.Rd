% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swissArmyKnife.R
\name{gr_refactor_seqs}
\alias{gr_refactor_seqs}
\title{Refactor seqinfo, seqnames, seqlengths, seqlevels of GenomicRanges object for easy harmony}
\usage{
gr_refactor_seqs(input_gr, new_levels = gUtils::hg_seqlengths())
}
\arguments{
\item{input_gr}{GenomicRanges object to refactor}

\item{new_levels}{Named vector object used as the template for new seq details, see \code{gUtils::hg_seqlengths()} for example}
}
\value{
GenomicRanges object with updated seqinfo, seqnames, seqlengths, seqlevels
}
\description{
Single command to refactor all seq details of a GenomicRanges object to easily harmonize with any other GenomicRanges object.
By default, this package uses the autosome (1-22) and sex chromosomes (X,Y) of hg38, see \code{gUtils::hg_seqlengths()}
Users can adjust this using the \code{new_levels} parameter.
}
\examples{
# Converting between reference genomes is complicated and proper seqinfo is hard
# to achieve without many lines of code, this function helps alleviate the issue

# Look at seqinfo from a hg19 dataset
GenomeInfoDb::seqinfo(kras_dnase_demo_gr_hg19)

# Look at seqinfo after lift over to hg38
GenomeInfoDb::seqinfo(example_dnase_hg38)

# Use gr_refactor_seqs to fix the inconsistencies
GenomeInfoDb::seqinfo(gr_refactor_seqs(example_dnase_hg38))

}
